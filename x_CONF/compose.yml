#https://doc.owncloud.com/server/next/admin_manual/installation/docker/
version: "3"

volumes:
  shared-workspace:
    name: "hadoop-distributed-file-system"
    driver: local
  pkcs11_vol:
    driver: local
  datgen_vol:
    driver: local
  files:
    driver: local
  postgres-data:
    driver: local
  mysql:
    driver: local
  redis:
    driver: local

services:

  pseudonymization_fe:
    image: novascomp/pseudonymization-fe:latest
    networks:
      - nvf
    restart: always
    ports:
      - 80:80
      - 443:443
      
  pseudonymization_pkcs11:
    image: novascomp/pseudonymizationpkcs11:latest
    networks:
      - nvf
    restart: always
    environment:
      ENCODING: ${ENCODING}
      DB_FILE: ${PKCS11_DB_FILE}
      NVF_ENDPOINT: ${NVF_ENDPOINT}
      NVF_ENDPOINT_NAMESPACE: ${NVF_ENDPOINT_NAMESPACE}
      HOSTING_ENDPOINT: ${HOSTING_ENDPOINT}
      UPLOAD_ROOT: ${PKCS11_UPLOAD_ROOT}
      UPLOAD_DIR: ${PKCS11_UPLOAD_DIR}
      OUTPUT_DIR: ${PKCS11_OUTPUT_DIR}
      TOKEN_NAME: ${PKCS11_TOKEN_NAME}
      TOKEN_PASSWORD: ${USER_PIN}
      HSM_SIMULATOR_PORT: ${HSM_SIMULATOR_PORT}
      HSM_SIMULATOR_ADDRESS: ${HSM_SIMULATOR_ADDRESS}
      CORS_LOCALHOST: ${CORS_LOCALHOST}
      CORS_HOSTING: ${CORS_HOSTING}
      CORS_GITHUB_HOSTING: ${CORS_GITHUB_HOSTING}
      STATIC_SALT: ${STATIC_SALT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
      SPARK_MASTER_HOST: ${SPARK_MASTER_HOST}
      SPARK_MASTER_PORT: ${SPARK_MASTER_PORT}
      SPARK_EXECUTOR_MEMORY: ${SPARK_EXECUTOR_MEMORY}
      NA_CHAR: ${NA_CHAR}
      OKTA_DISABLED: ${OKTA_DISABLED}
      
    ports:
      - ${PKCS11_PORT}:80
    depends_on:
      - nvf
      - utimaco_hsm_simulator
    volumes:
      - pkcs11_vol:/pkcs11_vol
      - shared-workspace:/opt/workspace

  datgen:
    image: novascomp/datgen:latest
    networks:
      - nvf
    restart: always
    environment:
      ENCODING: ${ENCODING}
      DB_FILE: ${DATGEN_DB_FILE}
      NVF_ENDPOINT: ${NVF_ENDPOINT}
      NVF_ENDPOINT_NAMESPACE: ${NVF_ENDPOINT_NAMESPACE}
      HOSTING_ENDPOINT: ${HOSTING_ENDPOINT}
      ARES_POOL: ${ARES_POOL}
      AIRPORT_INFO_POOL: ${AIRPORT_INFO_POOL}
      RAPID_API_KEY: ${RAPID_API_KEY}
      CORS_LOCALHOST: ${CORS_LOCALHOST}
      CORS_HOSTING: ${CORS_HOSTING}
      CORS_GITHUB_HOSTING: ${CORS_GITHUB_HOSTING}
    ports:
      - ${DATGEN_PORT}:80
    depends_on:
      - nvf
    volumes:
      - datgen_vol:/datgen_vol

  hsm_init:
    image: conf
    networks:
      - nvf
    container_name: hsm_init
    build:
      context: ./
      dockerfile: Dockerfile

    environment:
      USER_PIN: ${USER_PIN}
      SO_PIN: ${SO_PIN}
      PKCS11_MODULE: ${PKCS11_MODULE_1}
      CS_PKCS11_R3_CFG: ${CS_PKCS11_R3_CFG_1}
      PKCS11_TOKEN_NAME: ${PKCS11_TOKEN_NAME}
    depends_on:
      - utimaco_hsm_simulator

  utimaco_hsm_simulator:
    image: novascomp/cryptoserver:latest
    networks:
      - nvf

    restart: always
    ports:
      - ${SIMULATOR_PORT}:3001

  nvf:
    image: novascomp/nvf:latest
    networks:
      - nvf
    restart: always
    ports:
      - 51296:51296
    depends_on:
      - postgres2
      - owncloud

  postgres2:
    image: postgres:latest
    networks:
      - nvf
    restart: always
    environment:
      PGPORT: 5401
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: nvf_db
    ports:
      - 5401:5401
    volumes:
      - postgres-data:/var/lib/postgresql/data

  owncloud:
    image: owncloud/server:10.9.1
    networks:
      - nvf
    container_name: owncloud_server
    restart: always
    ports:
      - ${OWNCLOUD_PORT}:8080
    depends_on:
      - mariadb
      - redis
    environment:
      - OWNCLOUD_DOMAIN=localhost
      - OWNCLOUD_DB_TYPE=mysql
      - OWNCLOUD_DB_NAME=
      - OWNCLOUD_DB_USERNAME=
      - OWNCLOUD_DB_PASSWORD=
      - OWNCLOUD_DB_HOST=mariadb
      - OWNCLOUD_ADMIN_USERNAME=${ADMIN_USERNAME}
      - OWNCLOUD_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - OWNCLOUD_MYSQL_UTF8MB4=true
      - OWNCLOUD_REDIS_ENABLED=true
      - OWNCLOUD_REDIS_HOST=redis
    healthcheck:
      test: [ "CMD", "/usr/bin/healthcheck" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - files:/mnt/data

  mariadb:
    image: mariadb:10.5
    networks:
      - nvf
    container_name: owncloud_mariadb
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_USER=
      - MYSQL_PASSWORD=
      - MYSQL_DATABASE=
    command: [ "--max-allowed-packet=128M", "--innodb-log-file-size=64M" ]
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-u", "root", "--password=" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql:/var/lib/mysql

  redis:
    image: redis:6
    networks:
      - nvf
    container_name: owncloud_redis
    restart: always
    command: [ "--databases", "1" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis:/data
     
  jupyterlab:
    image: andreper/jupyterlab:3.0.0-spark-3.0.0
    networks:
      - nvf
    container_name: jupyterlab
    ports:
      - 8888:8888
      - 4040:4040
    volumes:
      - shared-workspace:/opt/workspace
  spark-master:
    image: andreper/spark-master:3.0.0
    networks:
      - nvf
    container_name: spark-master
    ports:
      - 8080:8080
      - 7077:7077
    volumes:
      - shared-workspace:/opt/workspace
  spark-worker-1:
    image: andreper/spark-worker:3.0.0
    networks:
      - nvf
    container_name: spark-worker-1
    environment:
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1024m
    ports:
      - 8081:8081
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master
  spark-worker-2:
    image: andreper/spark-worker:3.0.0
    networks:
      - nvf
    container_name: spark-worker-2
    environment:
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1024m
    ports:
      - 8082:8081
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master
  spark_redis:
    image: my_redis
    networks:
      - nvf
    container_name: spark_redis
    build:
      context: .
      dockerfile: RedisDockerfile
    restart: always
    ports:
      - 6379:6379
    volumes:
      - shared-workspace:/opt/workspace

networks:
  nvf:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1